{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/doctorComps/docinventory.jsx\";\nimport React from \"react\";\nimport Logo from \"../../images/erpharmtechgrayer.png\";\nimport { Link } from \"react-router-dom\";\nimport { DoctorRepository } from \"../../API\";\nexport class Docinventory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.doctorRepository = new DoctorRepository();\n    this.username = localStorage['username'];\n    this.state = {\n      drugs: []\n    };\n    this.formatQuantity = this.numberWithCommas.bind(this);\n  }\n\n  componentDidMount() {\n    this.doctorRepository.getInventory().then(Drug => this.setState({\n      drugs: Drug.data\n    }));\n  }\n\n  pickFilter(filterBy) {\n    this.currInventory.filter((filterBy, exp_date) => exp_date > \"2020-04-19T00:00:00.000Z\");\n  }\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      id: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Logo\",\n      src: Logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"yourCart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Inventory\")), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"range\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      value: \"default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, \"Filter For\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"time\",\n      onChange: e => this.pickFilter(e, \"instock\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }, \"In-Stock\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, \"Other Options\")), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"tableHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"All Inventory\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"itemsTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, \"Batch\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"Name (Drug ID)\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Expiration Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"Related Drugs\")), this.state.drugs.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, item.batch_id), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, item.name, \" (\", item.drug_id, \")\"), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, this.formatQuantity(item.quantity)), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, item.exp_date), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, item.related))))), /*#__PURE__*/React.createElement(Link, {\n      to: \"/doctor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"return\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Return to Homepage\")));\n  }\n\n}","map":{"version":3,"sources":["/usr/src/app/src/components/doctorComps/docinventory.jsx"],"names":["React","Logo","Link","DoctorRepository","Docinventory","Component","constructor","props","doctorRepository","username","localStorage","state","drugs","formatQuantity","numberWithCommas","bind","componentDidMount","getInventory","then","Drug","setState","data","pickFilter","filterBy","currInventory","filter","exp_date","x","toString","replace","render","e","map","item","batch_id","name","drug_id","quantity","related"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Logo from \"../../images/erpharmtechgrayer.png\";\nimport {Link} from \"react-router-dom\";\nimport { DoctorRepository } from \"../../API\";\n\nexport class Docinventory extends React.Component {\n\n    doctorRepository = new DoctorRepository();\n\n    username;\n    \n    constructor(props) {\n        super(props);\n        this.username = localStorage['username']\n        this.state = {\n            drugs:[],\n        }\n        this.formatQuantity = this.numberWithCommas.bind(this);\n    }\n\n    componentDidMount(){\n        this.doctorRepository.getInventory()\n            .then(Drug => this.setState({drugs : Drug.data}))\n    }\n\n    pickFilter(filterBy) {\n        this.currInventory.filter((filterBy,exp_date) => exp_date > \"2020-04-19T00:00:00.000Z\")\n    }\n\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    render() {\n        return (\n           <div className = \"body\">\n            <nav>\n                <div className = \"img\" id = \"logo\">\n                        <img alt=\"Logo\" src={Logo} />\n                </div>\n                <h1 className = \"yourCart\">\n                        Inventory\n                </h1>\n            </nav>\n            <select id = \"range\">\n                                    <option disabled selected value = \"default\">Filter For</option>\n                                    <option value = \"time\" onChange={e => this.pickFilter(e, \"instock\")}>In-Stock</option>\n                                    <option value = \"date\">Other Options</option>\n                    </select>\n            <h1 className = \"tableHeader\">All Inventory</h1>\n                <div className = \"itemsTable\">\n                    <table>\n                        <tr>\n                            <th>Batch</th>\n                            <th>Name (Drug ID)</th>\n                            <th>Quantity</th>\n                            <th>Expiration Date</th>\n                            <th>Related Drugs</th>\n                        </tr>\n                        {this.state.drugs.map(item => (\n                            <tr>\n                                <td id=\"item\">{item.batch_id}</td>\n                                <td id=\"item\">{item.name} ({item.drug_id})</td>\n                                <td id=\"item\">{this.formatQuantity(item.quantity)}</td>\n                                <td id=\"item\">{item.exp_date}</td>\n                                <td id=\"item\">{item.related}</td>\n                            </tr>\n                        ))}\n                    </table>\n                </div>\n                <Link to=\"/doctor\">\n                    <button className = \"return\">Return to Homepage</button>\n                    </Link> \n           </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}