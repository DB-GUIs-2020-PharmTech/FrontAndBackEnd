{"ast":null,"code":"import axios from 'axios';\nexport class ManufacturerRepository {\n  constructor() {\n    this.url = 'http://localhost:8000';\n  }\n\n  // config = {\n  //     headers: {\n  //         Authorization: ''\n  //     }\n  // };\n  getInventory() {\n    return new Promise((resolve, reject) => {\n      axios.get('http://localhost:8000/manufacturerinventory').then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  markExpired(item) {\n    return new Promise((resolve, reject) => {\n      axios.put(`${this.url}`, item, this.config).then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  markBuy(item) {\n    return new Promise((resolve, reject) => {\n      axios.put(`${this.url}`, item, this.config).then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  getOrders() {\n    return new Promise((resolve, reject) => {\n      axios.get('http://localhost:8000/pharmacyoutgoing').then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  getSales() {\n    return new Promise((resolve, reject) => {\n      axios.get('http://localhost:8000/manufacturersales').then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  getFinancials() {\n    return new Promise((resolve, reject) => {\n      axios.get(`${this.url}`, this.config).then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/usr/src/app/src/API/manufacturerRepository.js"],"names":["axios","ManufacturerRepository","url","getInventory","Promise","resolve","reject","get","then","x","data","catch","alert","markExpired","item","put","config","markBuy","getOrders","getSales","getFinancials"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport class ManufacturerRepository {\n    \n    url = 'http://localhost:8000'\n\n    // config = {\n    //     headers: {\n    //         Authorization: ''\n    //     }\n    // };\n\n    getInventory() {\n        return new Promise((resolve, reject) => {\n            axios.get('http://localhost:8000/manufacturerinventory')\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    markExpired(item) {\n        return new Promise((resolve, reject) => {\n            axios.put(`${this.url}`, item, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    markBuy(item) {\n        return new Promise((resolve, reject) => {\n            axios.put(`${this.url}`, item, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    getOrders() {\n        return new Promise((resolve, reject) => {\n            axios.get('http://localhost:8000/pharmacyoutgoing')\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    getSales() {\n        return new Promise((resolve, reject) => {\n            axios.get('http://localhost:8000/manufacturersales')\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    getFinancials() {\n        return new Promise((resolve, reject) => {\n            axios.get(`${this.url}`, this.config)\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}