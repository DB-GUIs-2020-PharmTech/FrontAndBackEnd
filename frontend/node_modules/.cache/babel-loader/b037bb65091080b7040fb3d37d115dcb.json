{"ast":null,"code":"import axios from 'axios';\nexport class DoctorRepository {\n  constructor() {\n    this.url = 'http://localhost:8000';\n  }\n\n  // config = {\n  //     headers: {\n  //         Authorization: ''\n  //     }\n  // };\n  getInventory() {\n    return new Promise((resolve, reject) => {\n      axios.get('http://localhost:8000/getInventory').then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n  getOrders() {\n    return new Promise((resolve, reject) => {\n      axios.get('http://localhost:8000/manufacturerorders').then(x => resolve(x.data)).catch(x => {\n        alert(x); // handle error\n\n        reject(x);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/usr/src/app/src/API/doctorRepository.js"],"names":["axios","DoctorRepository","url","getInventory","Promise","resolve","reject","get","then","x","data","catch","alert","getOrders"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAN,CAAuB;AAAA;AAAA,SAE1BC,GAF0B,GAEpB,uBAFoB;AAAA;;AAI1B;AACA;AACA;AACA;AACA;AAEAC,EAAAA,YAAY,GAAG;AACX,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,KAAK,CAACO,GAAN,CAAU,oCAAV,EACKC,IADL,CACUC,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACC,IAAH,CADtB,EAEKC,KAFL,CAEWF,CAAC,IAAI;AACRG,QAAAA,KAAK,CAACH,CAAD,CAAL,CADQ,CACE;;AACVH,QAAAA,MAAM,CAACG,CAAD,CAAN;AACH,OALL;AAMH,KAPM,CAAP;AAQH;;AAEDI,EAAAA,SAAS,GAAG;AACR,WAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,MAAAA,KAAK,CAACO,GAAN,CAAU,0CAAV,EACKC,IADL,CACUC,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACC,IAAH,CADtB,EAEKC,KAFL,CAEWF,CAAC,IAAI;AACRG,QAAAA,KAAK,CAACH,CAAD,CAAL,CADQ,CACE;;AACVH,QAAAA,MAAM,CAACG,CAAD,CAAN;AACH,OALL;AAMH,KAPM,CAAP;AAQH;;AA9ByB","sourcesContent":["import axios from 'axios'\n\nexport class DoctorRepository {\n    \n    url = 'http://localhost:8000'\n\n    // config = {\n    //     headers: {\n    //         Authorization: ''\n    //     }\n    // };\n\n    getInventory() {\n        return new Promise((resolve, reject) => {\n            axios.get('http://localhost:8000/getInventory')\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n\n    getOrders() {\n        return new Promise((resolve, reject) => {\n            axios.get('http://localhost:8000/manufacturerorders')\n                .then(x => resolve(x.data))\n                .catch(x => {\n                    alert(x); // handle error\n                    reject(x);\n                });\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}