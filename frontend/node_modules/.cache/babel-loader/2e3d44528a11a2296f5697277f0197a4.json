{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/manufacturerComps/manorders.jsx\";\nimport React from \"react\";\nimport Logo from \"../../images/erpharmtechgrayer.png\";\nimport { Link } from \"react-router-dom\";\nimport { ManufacturerRepository } from \"../../API\";\nexport class Manorders extends React.Component {\n  constructor(props) {\n    super(props);\n    this.manufacturerRepository = new ManufacturerRepository();\n    this.username = localStorage['username'];\n    this.state = {\n      orders: []\n    };\n    this.formatDate = this.formatDate.bind(this);\n    this.formatQuantity = this.numberWithCommas.bind(this);\n    this.getTotal = this.getTotal.bind(this);\n  }\n\n  componentDidMount() {\n    this.manufacturerRepository.getOrders().then(Drug => this.setState({\n      orders: Drug.data\n    }));\n  }\n\n  sortMe(event, sortKey) {\n    const orders = this.state.orders;\n    orders.sort((a, b) => a[sortKey].localeCompare(b[sortKey]));\n    this.setState({\n      orders\n    });\n  }\n\n  formatDate(myDate) {\n    var d = myDate.substring(5, 7) + \"-\" + myDate.substring(8, 10) + \"-\" + myDate.substring(0, 4);\n    return d;\n  }\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  getTotal(price, purchase_price) {\n    return price * purchase_price;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      id: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Logo,\n      alt: \"Logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"yourCart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Orders\")), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Sort By\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"sortNum\",\n      name: \"sort\",\n      value: \"num\",\n      onClick: e => this.sortMe(e, \"num\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"sortNum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Order #\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"sortDate\",\n      name: \"sort\",\n      value: \"date\",\n      onClick: e => this.sortMe(e, \"date\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"sortDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"sortStatus\",\n      name: \"sort\",\n      value: \"status\",\n      onClick: e => this.sortMe(e, \"status\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"sortStatus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"Status\")), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"tableHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"All Outgoing Orders\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"itemsTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, \"Order #\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, \"Units Sold\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, \"Price Per Unit\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, \"Total Price\")), this.state.orders.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, item.id), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, this.formatDate(item.date)), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, item.status), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, this.formatQuantity(item.quantity)), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, \"$\", item.purchase_price), /*#__PURE__*/React.createElement(\"td\", {\n      id: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, \"$\", this.getTotal(item.quantity, item.purchase_price)))))), /*#__PURE__*/React.createElement(Link, {\n      to: \"maninventory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"return\",\n      id: \"viewInventory\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"View All Inventory\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/manufacturer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"return\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Return to Homepage\")));\n  }\n\n}","map":{"version":3,"sources":["/usr/src/app/src/components/manufacturerComps/manorders.jsx"],"names":["React","Logo","Link","ManufacturerRepository","Manorders","Component","constructor","props","manufacturerRepository","username","localStorage","state","orders","formatDate","bind","formatQuantity","numberWithCommas","getTotal","componentDidMount","getOrders","then","Drug","setState","data","sortMe","event","sortKey","sort","a","b","localeCompare","myDate","d","substring","x","toString","replace","price","purchase_price","render","e","map","item","id","date","status","name","quantity"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Logo from \"../../images/erpharmtechgrayer.png\";\nimport {Link} from \"react-router-dom\";\nimport { ManufacturerRepository } from \"../../API\";\n\nexport class Manorders extends React.Component {\n\n    manufacturerRepository = new ManufacturerRepository();\n\n    username;\n    \n    constructor(props) {\n        super(props);\n        this.username = localStorage['username']\n        this.state = {\n            orders:[],\n        }\n        this.formatDate = this.formatDate.bind(this);\n        this.formatQuantity = this.numberWithCommas.bind(this);\n        this.getTotal = this.getTotal.bind(this);\n    }\n\n    componentDidMount(){\n        this.manufacturerRepository.getOrders()\n            .then(Drug => this.setState({orders : Drug.data}))\n    }\n\n    sortMe(event, sortKey){\n        const orders = this.state.orders;\n        orders.sort((a,b) => a[sortKey].localeCompare(b[sortKey]))\n        this.setState({orders})\n    }\n\n    formatDate(myDate){\n        var d = myDate.substring(5,7) + \"-\" + myDate.substring(8,10) + \"-\" + myDate.substring(0,4);\n        return d;\n    }\n\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    getTotal(price, purchase_price){\n        return price * purchase_price;\n    }\n\n    render() {\n        return (\n           <div className = \"body\">\n            <nav>\n                <div className = \"img\" id = \"logo\">\n                        <img src={Logo} alt=\"Logo\" />\n                </div>\n                <h1 className = \"yourCart\">\n                        Orders\n                </h1>\n            </nav>\n                <h1>Sort By</h1>\n                <form>\n                    <input type=\"radio\" id=\"sortNum\" name=\"sort\" value=\"num\" onClick={e => this.sortMe(e, \"num\")}></input>\n                    <label for=\"sortNum\">Order #</label>\n                    <input type=\"radio\" id=\"sortDate\" name=\"sort\" value=\"date\" onClick={e => this.sortMe(e, \"date\")}></input>\n                    <label for=\"sortDate\">Date</label>\n                    <input type=\"radio\" id=\"sortStatus\" name=\"sort\" value=\"status\" onClick={e => this.sortMe(e, \"status\")}></input>\n                    <label for=\"sortStatus\">Status</label>\n                </form>\n            {/* <h1 className = \"tableHeader\">Recent Outgoing Orders</h1>\n                <div className = \"itemsTable\">\n                    <table>\n                        <tr>\n                            <th>Order #</th>\n                            <th>Date</th>\n                            <th>Status</th>\n                            <th>Item</th>\n                            <th>Units Sold</th>\n                            <th>Price Per Unit</th>\n                            <th>Total Price</th>\n                        </tr>\n                        {this.state.orders.slice(0, 1).map(item => (\n                            <tr>\n                                <td id=\"item\">{item.num}</td>\n                                <td id=\"item\">{item.date}</td>\n                                <td id=\"item\">{item.status}</td>\n                                <td id=\"item\">{item.item}</td>\n                                <td id=\"item\">{item.units}</td>\n                                <td id=\"item\">${item.priceUnit}</td>\n                                <td id=\"item\">${item.price}</td>\n                            </tr>\n                        ))}\n                    </table>\n                </div> */}\n                <h1 className = \"tableHeader\">All Outgoing Orders</h1>\n                <div className = \"itemsTable\">\n                    <table>\n                        <tr>\n                            <th>Order #</th>\n                            <th>Date</th>\n                            <th>Status</th>\n                            <th>Item</th>\n                            <th>Units Sold</th>\n                            <th>Price Per Unit</th>\n                            <th>Total Price</th>\n                        </tr>\n                        {this.state.orders.map(item => (\n                            <tr>\n                                <td id=\"item\">{item.id}</td>\n                                <td id=\"item\">{this.formatDate(item.date)}</td>\n                                <td id=\"item\">{item.status}</td>\n                                <td id=\"item\">{item.name}</td>\n                                <td id=\"item\">{this.formatQuantity(item.quantity)}</td>\n                                <td id=\"item\">${item.purchase_price}</td>\n                                <td id=\"item\">${this.getTotal(item.quantity, item.purchase_price)}</td>\n                            </tr>\n                        ))}\n                    </table>\n                </div>\n                <Link to=\"maninventory\">\n                    <button className = \"return\" id = \"viewInventory\">View All Inventory</button>\n                    </Link> \n                <Link to=\"/manufacturer\">\n                    <button className = \"return\">Return to Homepage</button>\n                    </Link> \n           </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}